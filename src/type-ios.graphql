# iOS-specific GraphQL Types

# iOS detailed product types
enum ProductTypeIOS {
  Consumable
  NonConsumable
  AutoRenewableSubscription
  NonRenewingSubscription
}

# iOS subscription period units
enum SubscriptionPeriodIOS {
  Day
  Week
  Month
  Year
  # Represents an unspecified/empty period
  Empty
}

# Payment modes (EMPTY represents an unspecified/empty value)
enum PaymentModeIOS {
  Empty
  FreeTrial
  PayAsYouGo
  PayUpFront
}

# iOS subscription offer details
enum SubscriptionOfferTypeIOS {
  Introductory
  Promotional
}

# iOS subscription period (unit + value)
type SubscriptionPeriodValueIOS {
  unit: SubscriptionPeriodIOS!
  value: Int!
}

type SubscriptionOfferIOS {
  displayPrice: String!
  id: ID!
  paymentMode: PaymentModeIOS!
  period: SubscriptionPeriodValueIOS!
  periodCount: Int!
  price: Float!
  type: SubscriptionOfferTypeIOS!
}

type SubscriptionInfoIOS {
  introductoryOffer: SubscriptionOfferIOS
  promotionalOffers: [SubscriptionOfferIOS!]
  subscriptionGroupId: String!
  subscriptionPeriod: SubscriptionPeriodValueIOS!
}

# iOS product
type ProductIOS implements ProductCommon {
  # Common fields
  id: ID!
  title: String!
  description: String!
  type: ProductType!
  displayName: String
  displayPrice: String!
  currency: String!
  price: Float
  debugDescription: String
  platform: IapPlatform!

  # iOS-specific
  displayNameIOS: String!
  isFamilyShareableIOS: Boolean!
  jsonRepresentationIOS: String!
  subscriptionInfoIOS: SubscriptionInfoIOS
  typeIOS: ProductTypeIOS!
}

# iOS subscription product
type ProductSubscriptionIOS implements ProductCommon {
  # Common fields
  id: ID!
  title: String!
  description: String!
  type: ProductType!
  displayName: String
  displayPrice: String!
  currency: String!
  price: Float
  debugDescription: String
  platform: IapPlatform!

  # iOS-specific
  displayNameIOS: String!
  isFamilyShareableIOS: Boolean!
  jsonRepresentationIOS: String!
  subscriptionInfoIOS: SubscriptionInfoIOS
  typeIOS: ProductTypeIOS!

  discountsIOS: [DiscountIOS!]
  introductoryPriceIOS: String
  introductoryPriceAsAmountIOS: String
  introductoryPricePaymentModeIOS: PaymentModeIOS
  introductoryPriceNumberOfPeriodsIOS: String
  introductoryPriceSubscriptionPeriodIOS: SubscriptionPeriodIOS
  subscriptionPeriodNumberIOS: String
  subscriptionPeriodUnitIOS: SubscriptionPeriodIOS
}

# Discount information returned from the store
type DiscountIOS {
  identifier: String!
  type: String!
  numberOfPeriods: Int!
  price: String!
  priceAmount: Float!
  paymentMode: PaymentModeIOS!
  subscriptionPeriod: String!
  localizedPrice: String
}

# iOS purchase details
type PurchaseIOS implements PurchaseCommon {
  # Common fields
  id: ID!
  productId: String!
  ids: [String!]
  transactionDate: Float!
  purchaseToken: String
  platform: IapPlatform!
  quantity: Int!
  purchaseState: PurchaseState!
  isAutoRenewing: Boolean!

  # iOS-specific fields
  transactionId: String!
  quantityIOS: Int
  originalTransactionDateIOS: Float
  originalTransactionIdentifierIOS: String
  appAccountToken: String
  expirationDateIOS: Float
  webOrderLineItemIdIOS: String
  environmentIOS: String
  storefrontCountryCodeIOS: String
  appBundleIdIOS: String
  subscriptionGroupIdIOS: String
  isUpgradedIOS: Boolean
  ownershipTypeIOS: String
  reasonIOS: String
  reasonStringRepresentationIOS: String
  transactionReasonIOS: String
  revocationDateIOS: Float
  revocationReasonIOS: String
  offerIOS: PurchaseOfferIOS
  currencyCodeIOS: String
  currencySymbolIOS: String
  countryCodeIOS: String
}

type PurchaseOfferIOS {
  id: String!
  type: String!
  paymentMode: String!
}

# iOS purchase/subscribe inputs
input RequestPurchaseIosProps {
  """
  Product SKU
  """
  sku: String!
  """
  Auto-finish transaction (dangerous)
  """
  andDangerouslyFinishTransactionAutomatically: Boolean
  """
  App account token for user tracking
  """
  appAccountToken: String
  """
  Purchase quantity
  """
  quantity: Int
  """
  Discount offer to apply
  """
  withOffer: DiscountOfferInputIOS
  """
  External purchase URL for alternative billing (iOS)
  """
  externalPurchaseUrl: String
}

# iOS uses the same props for subscriptions
input RequestSubscriptionIosProps {
  sku: String!
  andDangerouslyFinishTransactionAutomatically: Boolean
  appAccountToken: String
  quantity: Int
  withOffer: DiscountOfferInputIOS
  """
  External purchase URL for alternative billing (iOS)
  """
  externalPurchaseUrl: String
}

# iOS Discount Offer (input)
input DiscountOfferInputIOS {
  """
  Discount identifier
  """
  identifier: String!
  """
  Key identifier for validation
  """
  keyIdentifier: String!
  """
  Cryptographic nonce
  """
  nonce: String!
  """
  Signature for validation
  """
  signature: String!
  """
  Timestamp of discount offer
  """
  timestamp: Float!
}

type ReceiptValidationResultIOS {
  """
  Whether the receipt is valid
  """
  isValid: Boolean!
  """
  Receipt data string
  """
  receiptData: String!
  """
  JWS representation
  """
  jwsRepresentation: String!
  """
  Latest transaction if available
  """
  latestTransaction: Purchase
}

# StoreKit Subscription Status (iOS)
type RenewalInfoIOS {
  jsonRepresentation: String
  willAutoRenew: Boolean!
  autoRenewPreference: String
}

type SubscriptionStatusIOS {
  state: String!
  renewalInfo: RenewalInfoIOS
}

# iOS DiscountOffer (output type)
type DiscountOfferIOS {
  """
  Discount identifier
  """
  identifier: String!
  """
  Key identifier for validation
  """
  keyIdentifier: String!
  """
  Cryptographic nonce
  """
  nonce: String!
  """
  Signature for validation
  """
  signature: String!
  """
  Timestamp of discount offer
  """
  timestamp: Float!
}

# StoreKit entitlement (iOS 15+)
type EntitlementIOS {
  sku: String!
  transactionId: String!
  jsonRepresentation: String!
}

type RefundResultIOS {
  status: String!
  message: String
}

type AppTransaction {
  bundleId: String!
  appVersion: String!
  originalAppVersion: String!
  originalPurchaseDate: Float!
  deviceVerification: String!
  deviceVerificationNonce: String!
  environment: String!
  signedDate: Float!
  appId: Float!
  appVersionId: Float!
  preorderDate: Float
  appTransactionId: String
  originalPlatform: String
}
